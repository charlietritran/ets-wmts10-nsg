package nsg.wmts10.testsuite.getcapabilities;

import static org.testng.Assert.assertTrue;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import javax.xml.xpath.XPathFactoryConfigurationException;
import javax.xml.xpath.XPath;

import org.testng.annotations.Test;
import org.testng.util.Strings;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import com.sun.jersey.api.client.ClientResponse;

import de.latlon.ets.core.error.ErrorMessage;
import de.latlon.ets.core.error.ErrorMessageKey;
import de.latlon.ets.core.util.URIUtils;

import static de.latlon.ets.core.assertion.ETSAssert.assertXPath;
import static de.latlon.ets.core.assertion.ETSAssert.assertUrl;
import static de.latlon.ets.core.assertion.ETSAssert.assertUriIsResolvable;
import static de.latlon.ets.core.assertion.ETSAssert.assertContentType;

import ets.wmts10.core.domain.ProtocolBinding;
import ets.wmts10.core.domain.WMTS_Constants;
import ets.wmts10.core.util.ServiceMetadataUtils;
import ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture;

public class GetCapabilitiesRest extends AbstractBaseGetCapabilitiesFixture 
{
/*---
	NSG Requirement 4: 
		An NSG WMTS server shall generate a ServiceMetadata document in response to a GetResourceRepresentation request in 
		REST architecture. 	
---*/
	
	private URI restURI;
	
	private boolean _debug = false;

//--	private String _debugRESTurl = "https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/WMTS/1.0.0/WMTSCapabilities.xml";
//--	private String _debugRESTurl = "http://www1.cityofwebster.com/arcgis/rest/services/Landbase/Store/MapServer/WMTS/1.0.0/WMTSCapabilities.xml";

	
	// ---
	
	@Test(description = "NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 4")
	public void wmtsCapabilitiesRESTCapable() 
			throws XPathExpressionException, XPathFactoryConfigurationException, URISyntaxException
	{
		restURI = ServiceMetadataUtils.getOperationEndpoint_REST(wmtsCapabilities, WMTS_Constants.GET_CAPABILITIES, ProtocolBinding.GET);
		if ( restURI == null )
		{
			String restURIstr = (String)createXPath().evaluate("//wmts:ServiceMetadataURL/@xlink:href", wmtsCapabilities, XPathConstants.STRING);
			if (!Strings.isNullOrEmpty(restURIstr))
			{
				restURI = new URI( restURIstr );
			}
		}
/*-- 
if ( restURI==null)
{
restURI = URI.create(this._debugRESTurl);
}
 --*/	
		assertTrue(this.restURI != null, "This WMTS does not support REST");
	}
	
	// ---
	
	@Test(description = "NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 4", dependsOnMethods="wmtsCapabilitiesRESTCapable")
	public void wmtsCapabilitiesRESTReponseTest()
	{
		assertTrue(restURI != null, "There is no REST URL to test against");

		String restURIstr = restURI.toString(); 
		
		assertUrl(restURIstr);
		//assertUriIsResolvable(restURIstr);
		
		 try 
		 {
			Document responseDoc = URIUtils.resolveURIAsDocument(restURI);
			
            assertTrue(WMTS_Constants.WMTS_CAPABILITIES.equals( responseDoc.getDocumentElement().getLocalName() ),
            		"Invalid REST request for WMTS ServeiceMetadata capabilities document: " + responseDoc.getDocumentElement().getNodeName() );
		 }
		 catch (Exception e)
		 {
			System.out.println(e.getMessage());
			if ( this._debug)
			{
				e.printStackTrace();
			}
			assertTrue(false, "Error found when retrieving REST  WMTS ServeiceMetadata capabilities document: " + e.getMessage());
		 }
	}
	
	
	// --- -------
  
	private XPath createXPath()
			throws XPathFactoryConfigurationException
	{
		XPathFactory factory = XPathFactory.newInstance( XPathConstants.DOM_OBJECT_MODEL );
		XPath xpath = factory.newXPath();
		xpath.setNamespaceContext( NS_BINDINGS );
		return xpath;
	}

}