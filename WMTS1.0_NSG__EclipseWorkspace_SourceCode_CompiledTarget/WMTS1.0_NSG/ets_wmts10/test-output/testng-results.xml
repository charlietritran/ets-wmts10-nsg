<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="13" failed="14" total="86" passed="59">
  <reporter-output>
    <line>
      <![CDATA[Initial test run parameters:
{wmts=http://ips.terrapixel.com/terrapixel/cubeserv.cgi?SERVICE=WMTS&REQUEST=GetCapabilities, tes=}]]>
    </line>
    <line>
      <![CDATA[Success? true]]>
    </line>
    <line>
      <![CDATA[Test run directory: C:\TestNG\Workspaces\WMTS1.0_NSG\ets_wmts10\test-output]]>
    </line>
  </reporter-output>
  <suite name="ets-wmts10-0.1-SNAPSHOT" duration-ms="24401" started-at="2017-07-14T13:13:51Z" finished-at="2017-07-14T13:14:16Z">
    <groups>
    </groups>
    <test name="Preconditions" duration-ms="908" started-at="2017-07-14T13:13:51Z" finished-at="2017-07-14T13:13:52Z">
      <class name="ets.wmts10.testsuite.Prerequisites">
        <test-method status="PASS" signature="verifyServiceDescription(org.testng.ITestContext)[pri:0, instance:ets.wmts10.testsuite.Prerequisites@32d992b2]" name="verifyServiceDescription" duration-ms="31" started-at="2017-07-14T09:13:51Z" finished-at="2017-07-14T09:13:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fd6b6c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyServiceDescription -->
        <test-method status="PASS" signature="serviceIsAvailable(org.testng.ITestContext)[pri:0, instance:ets.wmts10.testsuite.Prerequisites@32d992b2]" name="serviceIsAvailable" duration-ms="846" started-at="2017-07-14T09:13:51Z" depends-on-methods="ets.wmts10.testsuite.Prerequisites.verifyServiceDescription" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fd6b6c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceIsAvailable -->
      </class> <!-- ets.wmts10.testsuite.Prerequisites -->
    </test> <!-- Preconditions -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 1" duration-ms="0" started-at="2017-07-14T13:13:52Z" finished-at="2017-07-14T13:13:52Z">
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 1 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 2" duration-ms="578" started-at="2017-07-14T13:13:52Z" finished-at="2017-07-14T13:13:53Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="initBaseFixture" is-config="true" duration-ms="156" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@23811a09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="verifyGetCapabilitiesSupported" duration-ms="16" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="wmtsCapabilitiesExists" duration-ms="0" started-at="2017-07-14T09:13:52Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 2" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="wmtsCapabilitiesOperationsMetadataExists" duration-ms="297" started-at="2017-07-14T09:13:52Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 2" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations.wmtsCapabilitiesExists" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesOperationsMetadataExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:52Z" finished-at="2017-07-14T09:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsCapabilitiesOperationsMetadataOperationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="wmtsCapabilitiesOperationsMetadataOperationExists" duration-ms="78" started-at="2017-07-14T09:13:53Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 2" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataExists" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesOperationsMetadataOperationExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataOperationExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataOperationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="wmtsCapabilitiesKVPRequestsExists" duration-ms="0" started-at="2017-07-14T09:13:53Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 2" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataOperationExists" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesKVPRequestsExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesKVPRequestsExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesKVPRequestsExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataOperationExists status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesOperationsMetadataOperationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsCapabilitiesValidated()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="wmtsCapabilitiesValidated" duration-ms="15" started-at="2017-07-14T09:13:53Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 2" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations.wmtsCapabilitiesKVPRequestsExists" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesValidated -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesValidated status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesValidated()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesValidated status=SUCCESS method=GetCapabilitiesOperations.wmtsCapabilitiesValidated()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesOperations -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 2 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 3" duration-ms="843" started-at="2017-07-14T13:13:53Z" finished-at="2017-07-14T13:13:54Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="initBaseFixture" is-config="true" duration-ms="109" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2125ad3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesSOAPCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="wmtsCapabilitiesSOAPCapable" duration-ms="16" started-at="2017-07-14T09:13:53Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 3" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesSOAPCapable -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="verifyGetCapabilitiesSupported" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesSOAPCapable status=SUCCESS method=GetCapabilitiesSoap.wmtsCapabilitiesSOAPCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:53Z" finished-at="2017-07-14T09:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesSOAPCapable status=SUCCESS method=GetCapabilitiesSoap.wmtsCapabilitiesSOAPCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesSOAPReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="wmtsCapabilitiesSOAPReponseTest" duration-ms="718" started-at="2017-07-14T09:13:53Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 3" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap.wmtsCapabilitiesSOAPCapable" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesSOAPReponseTest -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesSOAPReponseTest status=SUCCESS method=GetCapabilitiesSoap.wmtsCapabilitiesSOAPReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesSOAPReponseTest status=SUCCESS method=GetCapabilitiesSoap.wmtsCapabilitiesSOAPReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoap -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 3 -->
    <test name="NSG Test A.3 - Server Test Module;  Service Metadata Content Test (Requirements 4,7)" duration-ms="11994" started-at="2017-07-14T13:13:54Z" finished-at="2017-07-14T13:14:06Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="initBaseFixture" is-config="true" duration-ms="110" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7a5b769b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="initParser" is-config="true" duration-ms="15" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="verifyGetCapabilitiesSupported" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesExists" duration-ms="63" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesContentsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesContentsExists" duration-ms="32" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesExists" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesContentsExists -->
        <test-method status="PASS" signature="wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesOperationsMetadataExists" duration-ms="31" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesExists" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesOperationsMetadataExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesContentsExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesContentsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesContentsExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesContentsExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesOperationsMetadataExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesOperationsMetadataExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesServiceIdentificationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesServiceIdentificationExists" duration-ms="31" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesExists" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesServiceIdentificationExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesServiceIdentificationExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsCapabilitiesServiceProviderExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesServiceProviderExists" duration-ms="47" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesExists" finished-at="2017-07-14T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesServiceProviderExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesServiceIdentificationExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesFeatureListURL status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesFeatureListURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="SKIP" signature="wmtsCapabilitiesDataURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesDataURL" duration-ms="0" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:13:54Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[WMTS ServiceMetadata Capabilities does not currently include DataURLs]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: WMTS ServiceMetadata Capabilities does not currently include DataURLs
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesDataURL(ServiceMetadataContent.java:447)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesDataURL -->
        <test-method status="SKIP" signature="wmtsCapabilitiesFeatureListURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesFeatureListURL" duration-ms="0" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:13:54Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[WMTS ServiceMetadata Capabilities does not currently include FeatureListURLs]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: WMTS ServiceMetadata Capabilities does not currently include FeatureListURLs
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesFeatureListURL(ServiceMetadataContent.java:435)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesFeatureListURL -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesServiceProviderExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesServiceProviderExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesServiceProviderExists status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesServiceProviderExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="SKIP" signature="wmtsCapabilitiesLayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesLayerDimension" duration-ms="172" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:13:54Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are no <Dimension> elements within any of the defined <Layer> elements.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are no <Dimension> elements within any of the defined <Layer> elements.
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesLayerDimension(ServiceMetadataContent.java:379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesLayerDimension -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesDataURL status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesDataURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesDataURL status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesDataURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesFeatureListURL status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesFeatureListURL()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerDimension status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesLayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsCapabilitiesLayerInfoFormat()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesLayerInfoFormat" duration-ms="375" started-at="2017-07-14T09:13:54Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:13:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
There are no <InfoFormat> elements for <Layer>:  CubeWerx.USGSTopo.USGSTopo]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
There are no <InfoFormat> elements for <Layer>:  CubeWerx.USGSTopo.USGSTopo
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesLayerInfoFormat(ServiceMetadataContent.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesLayerInfoFormat -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:54Z" finished-at="2017-07-14T09:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerDimension status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesLayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="16" started-at="2017-07-14T09:13:55Z" finished-at="2017-07-14T09:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerInfoFormat status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesLayerInfoFormat()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsCapabilitiesLayerStyleLegends()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesLayerStyleLegends" duration-ms="10837" started-at="2017-07-14T09:13:55Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
<Layer>: Airports.Airports does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: Airports.Airports does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_Airfield_OpsVue.CLT_Airfield_OpsVue does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_Airfield_OpsVue.CLT_Airfield_OpsVue does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_OpsVue_Inverted.CLT_OpsVue_Inverted does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_OpsVue_Inverted.CLT_OpsVue_Inverted does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CVG.CVG does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CVG.CVG does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_HI.IFR_HI does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_HI.IFR_HI does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_LOW.IFR_LOW does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_LOW.IFR_LOW does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: VFR.VFR does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: VFR.VFR does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: DSM.DSM does not have a minScaleDenominator for <Style>: Elevation for a Legend, <Layer>: DSM.DSM does not have a maxScaleDenominator for <Style>: Elevation for a Legend, <Layer>: DTED.DTED does not have a minScaleDenominator for <Style>: gtopo30 for a Legend, <Layer>: DTED.DTED does not have a maxScaleDenominator for <Style>: gtopo30 for a Legend, <Layer>: KCVG.KCVG does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: KCVG.KCVG does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: KY.KY does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: KY.KY does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: SAN_Airport.SAN_Airport does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: SAN_Airport.SAN_Airport does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: SFO_Airport.SFO_Airport does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: SFO_Airport.SFO_Airport does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.Foundation.aerofacp_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.aerofacp_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.builtupa_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.builtupa_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a minScaleDenominator for <Style>: red for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a maxScaleDenominator for <Style>: red for a Legend, <Layer>: CubeWerx.Foundation.combo does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.combo does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.depthl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.depthl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.etopo2 does not have a minScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.etopo2 does not have a maxScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.GTOPO30 does not have a minScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.GTOPO30 does not have a maxScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.inwatera_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.inwatera_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.oceansea_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.oceansea_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.polbndl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.polbndl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.railrdl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.railrdl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.roadl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.roadl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.treesa_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.treesa_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.watrcrsl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.watrcrsl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, There is no Legend for <Style>: default under <Layer>: CubeWerx.USGSTopo.USGSTopo, <Layer>: CubeWerx.ASI.ASI does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a minScaleDenominator for <Style>: CIR_4_1_2 for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a maxScaleDenominator for <Style>: CIR_4_1_2 for a Legend]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
<Layer>: Airports.Airports does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: Airports.Airports does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_Airfield_OpsVue.CLT_Airfield_OpsVue does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_Airfield_OpsVue.CLT_Airfield_OpsVue does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_OpsVue_Inverted.CLT_OpsVue_Inverted does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CLT_OpsVue_Inverted.CLT_OpsVue_Inverted does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CVG.CVG does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CVG.CVG does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_HI.IFR_HI does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_HI.IFR_HI does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_LOW.IFR_LOW does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: IFR_LOW.IFR_LOW does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: VFR.VFR does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: VFR.VFR does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: DSM.DSM does not have a minScaleDenominator for <Style>: Elevation for a Legend, <Layer>: DSM.DSM does not have a maxScaleDenominator for <Style>: Elevation for a Legend, <Layer>: DTED.DTED does not have a minScaleDenominator for <Style>: gtopo30 for a Legend, <Layer>: DTED.DTED does not have a maxScaleDenominator for <Style>: gtopo30 for a Legend, <Layer>: KCVG.KCVG does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: KCVG.KCVG does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: KY.KY does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: KY.KY does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: SAN_Airport.SAN_Airport does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: SAN_Airport.SAN_Airport does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: SFO_Airport.SFO_Airport does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: SFO_Airport.SFO_Airport does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.Foundation.aerofacp_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.aerofacp_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.builtupa_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.builtupa_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a minScaleDenominator for <Style>: red for a Legend, <Layer>: CubeWerx.Foundation.coastl_1m does not have a maxScaleDenominator for <Style>: red for a Legend, <Layer>: CubeWerx.Foundation.combo does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.combo does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.depthl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.depthl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.etopo2 does not have a minScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.etopo2 does not have a maxScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.GTOPO30 does not have a minScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.GTOPO30 does not have a maxScaleDenominator for <Style>: classicShaded for a Legend, <Layer>: CubeWerx.Foundation.inwatera_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.inwatera_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.oceansea_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.oceansea_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.polbndl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.polbndl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.railrdl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.railrdl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.roadl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.roadl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.treesa_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.treesa_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.watrcrsl_1m does not have a minScaleDenominator for <Style>: cubewerx for a Legend, <Layer>: CubeWerx.Foundation.watrcrsl_1m does not have a maxScaleDenominator for <Style>: cubewerx for a Legend, There is no Legend for <Style>: default under <Layer>: CubeWerx.USGSTopo.USGSTopo, <Layer>: CubeWerx.ASI.ASI does not have a minScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a maxScaleDenominator for <Style>: default for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a minScaleDenominator for <Style>: CIR_4_1_2 for a Legend, <Layer>: CubeWerx.ASI.ASI does not have a maxScaleDenominator for <Style>: CIR_4_1_2 for a Legend
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesLayerStyleLegends(ServiceMetadataContent.java:317)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesLayerStyleLegends -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:13:55Z" finished-at="2017-07-14T09:13:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerInfoFormat status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesLayerInfoFormat()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerStyleLegends status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesLayerStyleLegends()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesLayerStyles()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesLayerStyles" duration-ms="157" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesContentsExists" finished-at="2017-07-14T09:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesLayerStyles -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerStyleLegends status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesLayerStyleLegends()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerStyles status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesLayerStyles()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsCapabilitiesAbstract()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesAbstract" duration-ms="15" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The <Abstract> statement (OGC-compliant web map tiling server (WMTS) by Harris Inc.) should be:  This service implements the NSG WMTS 1.0.0 profile version 1.0. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The <Abstract> statement (OGC-compliant web map tiling server (WMTS) by Harris Inc.) should be:  This service implements the NSG WMTS 1.0.0 profile version 1.0. expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesAbstract(ServiceMetadataContent.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesAbstract -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesLayerStyles status=SUCCESS method=ServiceMetadataContent.wmtsCapabilitiesLayerStyles()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesAbstract status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesAbstract()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesAbstract status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesAbstract()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsCapabilitiesAccessConstraints()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesAccessConstraints" duration-ms="31" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected result evaluating XPath expression with context node #document: //ows:ServiceIdentification//ows:AccessConstraints expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected result evaluating XPath expression with context node #document: //ows:ServiceIdentification//ows:AccessConstraints expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at de.latlon.ets.core.assertion.ETSAssert.assertXPath(ETSAssert.java:86)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesAccessConstraints(ServiceMetadataContent.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesAccessConstraints -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesAccessConstraints status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesAccessConstraints()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords" duration-ms="16" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under WMTS ServiceMetadata Capabilities docuemnt]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under WMTS ServiceMetadata Capabilities docuemnt
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords(ServiceMetadataContent.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesAccessConstraints status=FAILURE method=ServiceMetadataContent.wmtsCapabilitiesAccessConstraints()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_Layer status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Layer()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_Layer status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Layer()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_Layer()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_Layer" duration-ms="0" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under Layer Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under Layer Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Layer(ServiceMetadataContent.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_Layer -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_LayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_LayerDimension" duration-ms="0" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under Dimension Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under Dimension Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerDimension(ServiceMetadataContent.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_LayerDimension -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_LayerStyle()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_LayerStyle" duration-ms="16" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under Style Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under Style Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerStyle(ServiceMetadataContent.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_LayerStyle -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_LayerDimension status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_LayerDimension status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerDimension()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_Theme status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Theme()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_LayerStyle status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerStyle()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_Theme status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Theme()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_LayerStyle status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_LayerStyle()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_TileMatrix()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_TileMatrix" duration-ms="15" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under TileMatrix Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under TileMatrix Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrix(ServiceMetadataContent.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_TileMatrix -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_Theme()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_Theme" duration-ms="0" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under Theme Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under Theme Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_Theme(ServiceMetadataContent.java:187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_Theme -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_TileMatrix status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrix()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_TileMatrixSet status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrixSet()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_TileMatrixSet status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrixSet()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="SKIP" signature="wmtsCapabilitiesNASkeywords_TileMatrixSet()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="wmtsCapabilitiesNASkeywords_TileMatrixSet" duration-ms="0" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirements 4,7" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesServiceIdentificationExists" finished-at="2017-07-14T09:14:06Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There is no <Keywords> Element to compare under TileMatrixSet Data Structure]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There is no <Keywords> Element to compare under TileMatrixSet Data Structure
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:79)
	at nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrixSet(ServiceMetadataContent.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesNASkeywords_TileMatrixSet -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesNASkeywords_TileMatrix status=SKIP method=ServiceMetadataContent.wmtsCapabilitiesNASkeywords_TileMatrix()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.ServiceMetadataContent -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Service Metadata Content Test (Requirements 4,7) -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 4" duration-ms="734" started-at="2017-07-14T13:14:06Z" finished-at="2017-07-14T13:14:07Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="initBaseFixture" is-config="true" duration-ms="94" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@f4c0e4e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="verifyGetCapabilitiesSupported" duration-ms="15" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="wmtsCapabilitiesRESTCapable" duration-ms="0" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 4" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesRESTCapable -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesRESTCapable status=SUCCESS method=GetCapabilitiesRest.wmtsCapabilitiesRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:06Z" finished-at="2017-07-14T09:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesRESTCapable status=SUCCESS method=GetCapabilitiesRest.wmtsCapabilitiesRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesRESTReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="wmtsCapabilitiesRESTReponseTest" duration-ms="625" started-at="2017-07-14T09:14:06Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 4" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest.wmtsCapabilitiesRESTCapable" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesRESTReponseTest -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesRESTReponseTest status=SUCCESS method=GetCapabilitiesRest.wmtsCapabilitiesRESTReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesRESTReponseTest status=SUCCESS method=GetCapabilitiesRest.wmtsCapabilitiesRESTReponseTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest@7cd62f43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesRest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 4 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 5" duration-ms="611" started-at="2017-07-14T13:14:07Z" finished-at="2017-07-14T13:14:07Z">
      <class name="nsg.wmts10.testsuite.gettile.GetTileParametersKvp">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="initBaseFixture" is-config="true" duration-ms="94" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@33c2bd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetTileRequest()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="buildGetTileRequest" is-config="true" duration-ms="15" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetTileRequest -->
        <test-method status="PASS" signature="setResultDirectory(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="setResultDirectory" is-config="true" duration-ms="33" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@33c2bd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultDirectory -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="verifyGetTileSupported" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetTileSupported -->
        <test-method status="PASS" signature="wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="wmtsGetTileKVPRequestsExists" duration-ms="16" started-at="2017-07-14T09:14:07Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 5" depends-on-methods="ets.wmts10.testsuite.gettile.AbstractBaseGetTileFixture.verifyGetTileSupported" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileKVPRequestsExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="wmtsGetTileRequestFormatParameters" duration-ms="453" started-at="2017-07-14T09:14:07Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 5" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileParametersKvp.wmtsGetTileKVPRequestsExists" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@33c2bd]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Expected content type image/x-jpegorpng, but received image/png]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Expected content type image/x-jpegorpng, but received image/png
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at nsg.wmts10.testsuite.gettile.GetTileParametersKvp.wmtsGetTileRequestFormatParameters(GetTileParametersKvp.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileRequestFormatParameters -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileParametersKvp.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileParametersKvp.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetTileParametersKvp.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetTileParametersKvp.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersKvp@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.gettile.GetTileParametersKvp -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 5 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 6" duration-ms="1047" started-at="2017-07-14T13:14:07Z" finished-at="2017-07-14T13:14:08Z">
      <class name="nsg.wmts10.testsuite.gettile.GetTileParametersSoap">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@58cd06cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="initParser" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetTileRequest()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="buildGetTileRequest" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetTileRequest -->
        <test-method status="PASS" signature="verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="verifyGetTileSupported" duration-ms="15" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetTileSupported -->
        <test-method status="PASS" signature="setResultDirectory(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="setResultDirectory" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@58cd06cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultDirectory -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileSOAPRequestsExists status=SUCCESS method=GetTileParametersSoap.wmtsGetTileSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsGetTileSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="wmtsGetTileSOAPRequestsExists" duration-ms="0" started-at="2017-07-14T09:14:07Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 6" depends-on-methods="ets.wmts10.testsuite.gettile.AbstractBaseGetTileFixture.verifyGetTileSupported" finished-at="2017-07-14T09:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileSOAPRequestsExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileSOAPRequestsExists status=SUCCESS method=GetTileParametersSoap.wmtsGetTileSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:07Z" finished-at="2017-07-14T09:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="wmtsGetTileRequestFormatParameters" duration-ms="938" started-at="2017-07-14T09:14:07Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 6" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileParametersSoap.wmtsGetTileSOAPRequestsExists" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@58cd06cb]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
SOAP response received format: image/png but expected: image/x-jpegorpng]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
SOAP response received format: image/png but expected: image/x-jpegorpng
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at nsg.wmts10.testsuite.gettile.GetTileParametersSoap.wmtsGetTileRequestFormatParameters(GetTileParametersSoap.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileRequestFormatParameters -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetTileParametersSoap.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetTileParametersSoap.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersSoap@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.gettile.GetTileParametersSoap -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 6 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 7" duration-ms="653" started-at="2017-07-14T13:14:08Z" finished-at="2017-07-14T13:14:09Z">
      <class name="nsg.wmts10.testsuite.gettile.GetTileParametersRest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="initBaseFixture" is-config="true" duration-ms="47" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ba45490]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="initParser" is-config="true" duration-ms="15" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetTileRequest()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="buildGetTileRequest" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetTileRequest -->
        <test-method status="PASS" signature="setResultDirectory(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="setResultDirectory" is-config="true" duration-ms="12" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ba45490]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultDirectory -->
        <test-method status="PASS" signature="verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="verifyGetTileSupported" duration-ms="1" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetTileSupported -->
        <test-method status="PASS" signature="wmtsGetTileRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="wmtsGetTileRESTCapable" duration-ms="15" started-at="2017-07-14T09:14:08Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 7" depends-on-methods="ets.wmts10.testsuite.gettile.AbstractBaseGetTileFixture.verifyGetTileSupported" finished-at="2017-07-14T09:14:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileRESTCapable -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRESTCapable status=SUCCESS method=GetTileParametersRest.wmtsGetTileRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsGetTileRequestParametersSupported(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="wmtsGetTileRequestParametersSupported" duration-ms="547" started-at="2017-07-14T09:14:08Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 7" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileParametersRest.wmtsGetTileRESTCapable" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ba45490]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileRequestParametersSupported -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:08Z" finished-at="2017-07-14T09:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRESTCapable status=SUCCESS method=GetTileParametersRest.wmtsGetTileRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestParametersSupported status=SUCCESS method=GetTileParametersRest.wmtsGetTileRequestParametersSupported(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestParametersSupported status=SUCCESS method=GetTileParametersRest.wmtsGetTileRequestParametersSupported(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileParametersRest@4d95d2a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.gettile.GetTileParametersRest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 7 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 8" duration-ms="501" started-at="2017-07-14T13:14:09Z" finished-at="2017-07-14T13:14:09Z">
      <class name="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@323659f8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetFeatureInfoRequest()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="buildGetFeatureInfoRequest" is-config="true" duration-ms="32" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetFeatureInfoRequest -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="verifyGetFeatureInfoSupported" duration-ms="15" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetFeatureInfoSupported -->
        <test-method status="PASS" signature="wmtsGetFeatureInfoExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="wmtsGetFeatureInfoExists" duration-ms="0" started-at="2017-07-14T09:14:09Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 8" depends-on-methods="ets.wmts10.testsuite.getfeatureinfo.AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported" finished-at="2017-07-14T09:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoExists status=SUCCESS method=GetFeatureInfoKvp.wmtsGetFeatureInfoExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoExists status=SUCCESS method=GetFeatureInfoKvp.wmtsGetFeatureInfoExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsGetFeatureInfoRequestParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="wmtsGetFeatureInfoRequestParameters" duration-ms="391" started-at="2017-07-14T09:14:09Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 5" depends-on-methods="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp.wmtsGetFeatureInfoExists" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@323659f8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoRequestParameters -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRequestParameters status=SUCCESS method=GetFeatureInfoKvp.wmtsGetFeatureInfoRequestParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="1" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRequestParameters status=SUCCESS method=GetFeatureInfoKvp.wmtsGetFeatureInfoRequestParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoKvp -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 8 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 9" duration-ms="348" started-at="2017-07-14T13:14:09Z" finished-at="2017-07-14T13:14:10Z">
      <class name="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:09Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@381cad29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetFeatureInfoRequest()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="buildGetFeatureInfoRequest" is-config="true" duration-ms="31" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetFeatureInfoRequest -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="verifyGetFeatureInfoSupported" duration-ms="16" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetFeatureInfoSupported -->
        <test-method status="PASS" signature="wmtsGetFeatureInfoSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="wmtsGetFeatureInfoSOAPRequestsExists" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 9" depends-on-methods="ets.wmts10.testsuite.getfeatureinfo.AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoSOAPRequestsExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoSOAPRequestsExists status=SUCCESS method=GetFeatureInfoSoap.wmtsGetFeatureInfoSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoSOAPRequestsExists status=SUCCESS method=GetFeatureInfoSoap.wmtsGetFeatureInfoSOAPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="wmtsGetTileRequestFormatParameters" duration-ms="235" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 9" depends-on-methods="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap.wmtsGetFeatureInfoSOAPRequestsExists" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@381cad29]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error with SOAP Response:  com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Invalid Content-Type:application/gml+xml. Is this an error message instead of a SOAP response? expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error with SOAP Response:  com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Invalid Content-Type:application/gml+xml. Is this an error message instead of a SOAP response? expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at ets.wmts10.core.util.WMTS_SOAPcontainer.getSOAPresponse(WMTS_SOAPcontainer.java:286)
	at nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap.wmtsGetTileRequestFormatParameters(GetFeatureInfoSoap.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileRequestFormatParameters -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="2" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetFeatureInfoSoap.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileRequestFormatParameters status=FAILURE method=GetFeatureInfoSoap.wmtsGetTileRequestFormatParameters(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap@76f2b07d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoSoap -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 9 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 10" duration-ms="109" started-at="2017-07-14T13:14:10Z" finished-at="2017-07-14T13:14:10Z">
      <class name="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@24361cfc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetFeatureInfoRequest()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="buildGetFeatureInfoRequest" is-config="true" duration-ms="31" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetFeatureInfoRequest -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="verifyGetFeatureInfoSupported" duration-ms="16" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetFeatureInfoSupported -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRESTCapable status=FAILURE method=GetFeatureInfoRest.wmtsGetFeatureInfoRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRESTCapable status=FAILURE method=GetFeatureInfoRest.wmtsGetFeatureInfoRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsGetFeatureInfoRESTCapable()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="wmtsGetFeatureInfoRESTCapable" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 10" depends-on-methods="ets.wmts10.testsuite.getfeatureinfo.AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported" finished-at="2017-07-14T09:14:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[GetFeatureInfo (GET) endpoint not found or REST is not supported in ServiceMetadata capabilities document. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: GetFeatureInfo (GET) endpoint not found or REST is not supported in ServiceMetadata capabilities document. expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest.wmtsGetFeatureInfoRESTCapable(GetFeatureInfoRest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoRESTCapable -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="SKIP" signature="wmtsGetFeatureInfoRequestParametersSupported(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest@458c1321]" name="wmtsGetFeatureInfoRequestParametersSupported" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 10" depends-on-methods="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest.wmtsGetFeatureInfoRESTCapable" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoRequestParametersSupported -->
      </class> <!-- nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoRest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 10 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 11" duration-ms="78" started-at="2017-07-14T13:14:10Z" finished-at="2017-07-14T13:14:10Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@34e20e6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="wmtsCapabilitiesExists" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 11" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesCrsTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="wmtsCapabilitiesCrsTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="wmtsCapabilitiesCrsTest" duration-ms="16" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 11" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest.wmtsCapabilitiesExists" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesCrsTest -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesCrsTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="verifyGetCapabilitiesSupported" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesCrsTest status=SUCCESS method=GetCapabilitiesCrsTest.wmtsCapabilitiesCrsTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesCrsTest status=SUCCESS method=GetCapabilitiesCrsTest.wmtsCapabilitiesCrsTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesCrsTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 11 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 12" duration-ms="78" started-at="2017-07-14T13:14:10Z" finished-at="2017-07-14T13:14:10Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="initBaseFixture" is-config="true" duration-ms="63" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@15ac59c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="verifyGetCapabilitiesSupported" duration-ms="15" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesEPSG3395Test status=FAILURE method=GetCapabilitiesProjectionTest.wmtsCapabilitiesEPSG3395Test()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesUPSTest status=SKIP method=GetCapabilitiesProjectionTest.wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="wmtsCapabilitiesExists" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 12" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesUPSTest status=SKIP method=GetCapabilitiesProjectionTest.wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsCapabilitiesEPSG3395Test()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="wmtsCapabilitiesEPSG3395Test" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 12" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest.wmtsCapabilitiesExists" finished-at="2017-07-14T09:14:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[WMTS does not support EPSG:3395 (World Mercator Projection) in none of its <Layer>s or <TileMatrixSet>s. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: WMTS does not support EPSG:3395 (World Mercator Projection) in none of its <Layer>s or <TileMatrixSet>s. expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest.wmtsCapabilitiesEPSG3395Test(GetCapabilitiesProjectionTest.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesEPSG3395Test -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesProjectionTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesProjectionTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="SKIP" signature="wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="wmtsCapabilitiesUPSTest" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 12" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest.wmtsCapabilitiesExists" finished-at="2017-07-14T09:14:10Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test for UPS projections currenly not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test for UPS projections currenly not implemented
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest.wmtsCapabilitiesUPSTest(GetCapabilitiesProjectionTest.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesUPSTest -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesEPSG3395Test status=FAILURE method=GetCapabilitiesProjectionTest.wmtsCapabilitiesEPSG3395Test()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest@bd8db5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesProjectionTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 12 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 13" duration-ms="78" started-at="2017-07-14T13:14:10Z" finished-at="2017-07-14T13:14:10Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7a7d1b47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="verifyGetCapabilitiesSupported" duration-ms="16" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesUPSTest status=SKIP method=GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesUPSTest status=SKIP method=GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="wmtsCapabilitiesExists" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 13" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesExists -->
        <test-method status="SKIP" signature="wmtsCapabilitiesUPSTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="wmtsCapabilitiesUPSTest" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 13" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesExists" finished-at="2017-07-14T09:14:10Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test for Well-Known Scales currenly not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test for Well-Known Scales currenly not implemented
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesUPSTest(GetCapabilitiesWellKnownScaleTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesUPSTest -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesExists status=SUCCESS method=GetCapabilitiesWellKnownScaleTest.wmtsCapabilitiesExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest@2a742aa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesWellKnownScaleTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 13 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 14" duration-ms="2535" started-at="2017-07-14T13:14:10Z" finished-at="2017-07-14T13:14:13Z">
      <class name="nsg.wmts10.testsuite.gettile.GetTileOfferings">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="initBaseFixture" is-config="true" duration-ms="93" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@489543a6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetTileRequest()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="buildGetTileRequest" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetTileRequest -->
        <test-method status="PASS" signature="verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="verifyGetTileSupported" duration-ms="16" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetTileSupported -->
        <test-method status="PASS" signature="setResultDirectory(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="setResultDirectory" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@489543a6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultDirectory -->
        <test-method status="FAIL" signature="wmtsGetCapabilitiiesWithHTML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetCapabilitiiesWithHTML" duration-ms="172" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@489543a6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected content type text/html, but received application/xml; charset=utf-8 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected content type text/html, but received application/xml; charset=utf-8 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at ets.wmts10.core.assertion.WmtsAssertion.assertContentType(WmtsAssertion.java:128)
	at ets.wmts10.core.assertion.WmtsAssertion.assertContentType(WmtsAssertion.java:140)
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpFormatTest.verifyFormatResponse(GetCapabilitiesKvpFormatTest.java:88)
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpFormatTest.TestHTML(GetCapabilitiesKvpFormatTest.java:70)
	at nsg.wmts10.testsuite.gettile.GetTileOfferings.wmtsGetCapabilitiiesWithHTML(GetTileOfferings.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiiesWithHTML -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesInEnglish status=SUCCESS method=GetTileOfferings.wmtsGetCapabilitiiesInEnglish()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsGetCapabilitiiesInEnglish()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetCapabilitiiesInEnglish" duration-ms="0" started-at="2017-07-14T09:14:10Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" finished-at="2017-07-14T09:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiiesInEnglish -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:10Z" finished-at="2017-07-14T09:14:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesInEnglish status=SUCCESS method=GetTileOfferings.wmtsGetCapabilitiiesInEnglish()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="1" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesWithHTML status=FAILURE method=GetTileOfferings.wmtsGetCapabilitiiesWithHTML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsGetCapabilitiiesWithXML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetCapabilitiiesWithXML" duration-ms="265" started-at="2017-07-14T09:14:11Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@489543a6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiiesWithXML -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesWithHTML status=FAILURE method=GetTileOfferings.wmtsGetCapabilitiiesWithHTML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileOfferings.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesWithXML status=SUCCESS method=GetTileOfferings.wmtsGetCapabilitiiesWithXML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsGetTileOfferingsTestGIF()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetTileOfferingsTestGIF" duration-ms="235" started-at="2017-07-14T09:14:11Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileOfferings.wmtsGetTileKVPRequestsExists" finished-at="2017-07-14T09:14:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected status code(s) [200] but received 400. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected status code(s) [200] but received 400. expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at ets.wmts10.core.assertion.WmtsAssertion.assertStatusCode(WmtsAssertion.java:94)
	at ets.wmts10.core.assertion.WmtsAssertion.assertStatusCode(WmtsAssertion.java:106)
	at nsg.wmts10.testsuite.gettile.GetTileOfferings.checkGetTileWithImageFormat(GetTileOfferings.java:125)
	at nsg.wmts10.testsuite.gettile.GetTileOfferings.wmtsGetTileOfferingsTestGIF(GetTileOfferings.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileOfferingsTestGIF -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileOfferings.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetTileKVPRequestsExists" duration-ms="0" started-at="2017-07-14T09:14:11Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" depends-on-methods="ets.wmts10.testsuite.gettile.AbstractBaseGetTileFixture.verifyGetTileSupported" finished-at="2017-07-14T09:14:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileKVPRequestsExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiiesWithXML status=SUCCESS method=GetTileOfferings.wmtsGetCapabilitiiesWithXML(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestGIF status=FAILURE method=GetTileOfferings.wmtsGetTileOfferingsTestGIF()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:11Z" finished-at="2017-07-14T09:14:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestGIF status=FAILURE method=GetTileOfferings.wmtsGetTileOfferingsTestGIF()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsGetTileOfferingsTestJPG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetTileOfferingsTestJPG" duration-ms="948" started-at="2017-07-14T09:14:11Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileOfferings.wmtsGetTileKVPRequestsExists" finished-at="2017-07-14T09:14:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileOfferingsTestJPG -->
        <test-method status="PASS" signature="wmtsGetTileOfferingsTestPNG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="wmtsGetTileOfferingsTestPNG" duration-ms="781" started-at="2017-07-14T09:14:12Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 14" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileOfferings.wmtsGetTileKVPRequestsExists" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileOfferingsTestPNG -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:12Z" finished-at="2017-07-14T09:14:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestJPG status=SUCCESS method=GetTileOfferings.wmtsGetTileOfferingsTestJPG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:12Z" finished-at="2017-07-14T09:14:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestJPG status=SUCCESS method=GetTileOfferings.wmtsGetTileOfferingsTestJPG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestPNG status=SUCCESS method=GetTileOfferings.wmtsGetTileOfferingsTestPNG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileOfferingsTestPNG status=SUCCESS method=GetTileOfferings.wmtsGetTileOfferingsTestPNG()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileOfferings@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.gettile.GetTileOfferings -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 14 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 15" duration-ms="616" started-at="2017-07-14T13:14:13Z" finished-at="2017-07-14T13:14:13Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="initBaseFixture" is-config="true" duration-ms="62" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6eb82908]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="verifyGetCapabilitiesSupported" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="wmtsGetCapabilitiesURLExists" duration-ms="0" started-at="2017-07-14T09:14:13Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 15" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiesURLExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesKvpVersionTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesKvpVersionTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="wmtsCapabilitiesVersionTest" duration-ms="522" started-at="2017-07-14T09:14:13Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 15" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest.wmtsGetCapabilitiesURLExists" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesVersionTest -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesVersionTest status=SUCCESS method=GetCapabilitiesKvpVersionTest.wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesVersionTest status=SUCCESS method=GetCapabilitiesKvpVersionTest.wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest@1a1d6a08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKvpVersionTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 15 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 16" duration-ms="1032" started-at="2017-07-14T13:14:13Z" finished-at="2017-07-14T13:14:14Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="initBaseFixture" is-config="true" duration-ms="63" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4a8df3e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="verifyGetCapabilitiesSupported" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="wmtsGetCapabilitiesURLExists" duration-ms="15" started-at="2017-07-14T09:14:13Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 16" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiesURLExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:13Z" finished-at="2017-07-14T09:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:14Z" finished-at="2017-07-14T09:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesSoapVersionTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:14Z" finished-at="2017-07-14T09:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesSoapVersionTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="wmtsCapabilitiesVersionTest" duration-ms="954" started-at="2017-07-14T09:14:14Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 16" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest.wmtsGetCapabilitiesURLExists" finished-at="2017-07-14T09:14:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesVersionTest -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:14Z" finished-at="2017-07-14T09:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesVersionTest status=SUCCESS method=GetCapabilitiesSoapVersionTest.wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:14Z" finished-at="2017-07-14T09:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesVersionTest status=SUCCESS method=GetCapabilitiesSoapVersionTest.wmtsCapabilitiesVersionTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest@587d1d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesSoapVersionTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 16 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 17" duration-ms="94" started-at="2017-07-14T13:14:14Z" finished-at="2017-07-14T13:14:15Z">
      <class name="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="initBaseFixture" is-config="true" duration-ms="63" started-at="2017-07-14T09:14:14Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3d98d138]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="buildGetCapabilitiesRequest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="buildGetCapabilitiesRequest" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetCapabilitiesRequest -->
        <test-method status="PASS" signature="verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="verifyGetCapabilitiesSupported" duration-ms="15" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetCapabilitiesSupported -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="FAIL" signature="wmtsCapabilitiesKeywordTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="wmtsCapabilitiesKeywordTest" duration-ms="0" started-at="2017-07-14T09:14:15Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 17" depends-on-methods="nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.wmtsGetCapabilitiesURLExists" finished-at="2017-07-14T09:14:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[WMTS ServiceMetadata Capabilities docuemnt contains no mandatory <Keywords> Element. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: WMTS ServiceMetadata Capabilities docuemnt contains no mandatory <Keywords> Element. expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.verifyNASkeywords(GetCapabilitiesKeywordTest.java:71)
	at nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest.wmtsCapabilitiesKeywordTest(GetCapabilitiesKeywordTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsCapabilitiesKeywordTest -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetCapabilitiesSupported status=SUCCESS method=AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="wmtsGetCapabilitiesURLExists" duration-ms="0" started-at="2017-07-14T09:14:15Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 17" depends-on-methods="ets.wmts10.testsuite.getcapabilities.AbstractBaseGetCapabilitiesFixture.verifyGetCapabilitiesSupported" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetCapabilitiesURLExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesKeywordTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetCapabilitiesURLExists status=SUCCESS method=GetCapabilitiesKeywordTest.wmtsGetCapabilitiesURLExists()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesKeywordTest status=FAILURE method=GetCapabilitiesKeywordTest.wmtsCapabilitiesKeywordTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsCapabilitiesKeywordTest status=FAILURE method=GetCapabilitiesKeywordTest.wmtsCapabilitiesKeywordTest()[pri:0, instance:nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
      </class> <!-- nsg.wmts10.testsuite.getcapabilities.GetCapabilitiesKeywordTest -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 17 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 18" duration-ms="0" started-at="2017-07-14T13:14:15Z" finished-at="2017-07-14T13:14:15Z">
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 18 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 19" duration-ms="1015" started-at="2017-07-14T13:14:15Z" finished-at="2017-07-14T13:14:16Z">
      <class name="nsg.wmts10.testsuite.gettile.GetTileCachingInfo">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="initBaseFixture" is-config="true" duration-ms="46" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2f2d52ef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="initParser" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetTileRequest()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="buildGetTileRequest" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetTileRequest -->
        <test-method status="PASS" signature="setResultDirectory(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="setResultDirectory" is-config="true" duration-ms="14" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2f2d52ef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultDirectory -->
        <test-method status="PASS" signature="verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="verifyGetTileSupported" duration-ms="1" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetTileSupported -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="wmtsGetTileKVPRequestsExists" duration-ms="0" started-at="2017-07-14T09:14:15Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 19" depends-on-methods="ets.wmts10.testsuite.gettile.AbstractBaseGetTileFixture.verifyGetTileSupported" finished-at="2017-07-14T09:14:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileKVPRequestsExists -->
        <test-method status="PASS" signature="wmtsGetTileCachingInformationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="wmtsGetTileCachingInformationExists" duration-ms="922" started-at="2017-07-14T09:14:15Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 19" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileCachingInfo.wmtsGetTileKVPRequestsExists" finished-at="2017-07-14T09:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileCachingInformationExists -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetTileSupported status=SUCCESS method=AbstractBaseGetTileFixture.verifyGetTileSupported()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileCachingInfo.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:15Z" finished-at="2017-07-14T09:14:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileKVPRequestsExists status=SUCCESS method=GetTileCachingInfo.wmtsGetTileKVPRequestsExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileExpirationExists status=FAILURE method=GetTileCachingInfo.wmtsGetTileExpirationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileCachingInformationExists status=SUCCESS method=GetTileCachingInfo.wmtsGetTileCachingInformationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="FAIL" signature="wmtsGetTileExpirationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="wmtsGetTileExpirationExists" duration-ms="0" started-at="2017-07-14T09:14:16Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 19" depends-on-methods="nsg.wmts10.testsuite.gettile.GetTileCachingInfo.wmtsGetTileCachingInformationExists" finished-at="2017-07-14T09:14:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[WMTS has cache-control or expiration headers, but no expiration time or date is found. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: WMTS has cache-control or expiration headers, but no expiration time or date is found. expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at nsg.wmts10.testsuite.gettile.GetTileCachingInfo.wmtsGetTileExpirationExists(GetTileCachingInfo.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetTileExpirationExists -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileCachingInformationExists status=SUCCESS method=GetTileCachingInfo.wmtsGetTileCachingInformationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetTileExpirationExists status=FAILURE method=GetTileCachingInfo.wmtsGetTileExpirationExists()[pri:0, instance:nsg.wmts10.testsuite.gettile.GetTileCachingInfo@12cdcf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.gettile.GetTileCachingInfo -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 19 -->
    <test name="NSG Test A.3 - Server Test Module;  Requirement 20" duration-ms="94" started-at="2017-07-14T13:14:16Z" finished-at="2017-07-14T13:14:16Z">
      <class name="nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse">
        <test-method status="PASS" signature="initBaseFixture(org.testng.ITestContext)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="initBaseFixture" is-config="true" duration-ms="31" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@f2ce6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBaseFixture -->
        <test-method status="PASS" signature="initParser()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="initParser" is-config="true" duration-ms="16" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initParser -->
        <test-method status="PASS" signature="buildGetFeatureInfoRequest()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="buildGetFeatureInfoRequest" is-config="true" duration-ms="15" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildGetFeatureInfoRequest -->
        <test-method status="PASS" signature="verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="verifyGetFeatureInfoSupported" duration-ms="16" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetFeatureInfoSupported -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
        <test-method status="FAIL" signature="wmtsGetFeatureInfoRespondWith()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="wmtsGetFeatureInfoRespondWith" duration-ms="16" started-at="2017-07-14T09:14:16Z" description="NSG Web Map Tile Service (WMTS) 1.0.0, Requirement 20" depends-on-methods="ets.wmts10.testsuite.getfeatureinfo.AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported" finished-at="2017-07-14T09:14:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This WMTS does not support 'text/xml' or 'text/html' for GetFeatureInfo function. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This WMTS does not support 'text/xml' or 'text/html' for GetFeatureInfo function. expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse.wmtsGetFeatureInfoRespondWith(GetFeatureInfoResponse.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wmtsGetFeatureInfoRespondWith -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetFeatureInfoSupported status=SUCCESS method=AbstractBaseGetFeatureInfoFixture.verifyGetFeatureInfoSupported()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestSuccess(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="addAttributesOnTestSuccess" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRespondWith status=FAILURE method=GetFeatureInfoResponse.wmtsGetFeatureInfoRespondWith()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestSuccess -->
        <test-method status="PASS" signature="addAttributesOnTestFailure(org.testng.ITestResult)[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec]" name="addAttributesOnTestFailure" is-config="true" duration-ms="0" started-at="2017-07-14T09:14:16Z" finished-at="2017-07-14T09:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wmtsGetFeatureInfoRespondWith status=FAILURE method=GetFeatureInfoResponse.wmtsGetFeatureInfoRespondWith()[pri:0, instance:nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse@371a67ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttributesOnTestFailure -->
      </class> <!-- nsg.wmts10.testsuite.getfeatureinfo.GetFeatureInfoResponse -->
    </test> <!-- NSG Test A.3 - Server Test Module;  Requirement 20 -->
  </suite> <!-- ets-wmts10-0.1-SNAPSHOT -->
</testng-results>
